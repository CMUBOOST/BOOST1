#include <ros/ros.h>
#include <tf/transform_broadcaster.h>
#include "nav_msgs/Odometry.h"

void callback(const nav_msgs::Odometry::ConstPtr& msg)
{
  ROS_INFO_STREAM("I heard:" << msg->child_frame_id);
    broadcaster.sendTransform(
      tf::StampedTransform(
        tf::Transform(tf::Quaternion(0, 0, 0, 1), tf::Vector3(0.1, 0.0, 0.2)),
        ros::Time::now(),"map","base_link"));
}

int main(int argc, char** argv){
  ros::init(argc, argv, "robot_tf_publisher");
  ros::NodeHandle n;

  ros::Rate r(50);

  tf::TransformBroadcaster broadcaster;

  ros::Subscriber sub = n.subscribe("/wheel_encoder/odom", 1000, callback);

  while(n.ok()){
    r.sleep();
    ros::spin();
  }
}


//#include "ros/ros.h"
//#include "std_msgs/String.h"

/**
 * This tutorial demonstrates simple receipt of messages over the ROS system.
 */

/*
int main(int argc, char **argv)
{
  ros::init(argc, argv, "listener");

  ros::NodeHandle n;

  ros::Subscriber sub = n.subscribe("chatter", 1000, chatterCallback);

  ros::spin();

  return 0;
}
*/
