<?xml version="1.0"?>
<launch>
    
    <!-- Start joy node -->
    <!--arg name="joy_dev" default="/dev/input/js1" />

	<node pkg="joy" name="joy_node" type="joy_node">

	</node-->

	<!-- Launch hebi teleop node -->
  	<node pkg="hebi" name="kdc_arm_node" type="kdc_arm_node">
  		<param name="publish_frequency" value="50" />
  	</node>

 	 <!-- urdf xml robot description loaded on the Parameter Server-->
 	 <param name="robot_description" textfile="$(find boost_urdf)/robots/boost_stalker.urdf" />
 
	  <!-- robot visualization -->
<!-- 	<node name="rviz" pkg="rviz" type="rviz" required="true" /> -->
	 
	  <!-- publish all the frames to TF -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" value="50"/> <!-- Hz -->
	</node>

	<!-- publish DUO3D TF to rest of robot -->
	<node pkg="tf" type="static_transform_publisher" name="duotf_static_broadcaster" args="0.245 0.015 0 -1.57 -1.57 -1.57 arm_pan2_link duo3d_camera 15" />

	<!-- publish base_link rotated pi radians about the z axis for Merritt's lazy ass -->
<!-- 	<node pkg="tf" type="static_transform_publisher" name="base_link_rotated_tf_static_broadcaster" args="0 0 0 3.14 0 0 base_link_x_flipped base_link 33" /> -->
	<node pkg="tf" type="static_transform_publisher" name="another_rotated_tf_static_broadcaster" args="-0.1695 0 0.44835 3.14 0 0 base_link topPlate_pan1_link 15" />

	<!-- publish TF between DUO3D and the board1 tf produced by ar_sys -->
	<node pkg="kdc_arm_tf2" type="cylinder_to_tf2" name="cylinder_to_tf2" /> 

	<!-- publish camera and board points relative to base_link -->
	<node pkg="kdc_arm_tf2" type="cylinder_pose_publisher" name="cylinder_pose_publisher" output="screen"/>

	<!-- start up the executive -->
	<node pkg="arm_executive" type="arm_executive_node4" name="arm_executive_node4" output="screen"/>

	<!-- start up the service node to configure the arm -->
	<node pkg="hebi" type="arm_config_service_node4" name="arm_config_service_node4" output="screen"/>

	<node name="cylinder_servo_node6" pkg="hebi" type="cylinder_servo_node6" output="screen">
		<!--param name="cameraTopic" type="string" value="/kdc/camera_point" /-->
		<!--param name="boardTopic" type="string" value="/kdc/board_point" /-->
		<param name="jointTopic" type="string" value="/joint_states" />
	</node >

	<!--  Insert gripper_node5 call  -->
	<node pkg="gripper" type="gripper_node6" name="gripper_node6" output="screen"/>

	<node pkg="gripper" type="gripper_close" name="gripper_close" output="screen"/>

	<node pkg="gripper" type="gripper_open" name="gripper_open" output="screen"/>

	<!-- start up the service node to reverse the arm -->
	<node pkg="hebi" type="cylinder_reverse_node5" name="cylinder_reverse_node5" output="screen"/>

	<!-- publish TFs for RVIZ -->
	<!--node pkg="tf" type="static_transform_publisher" name="map_to_duocamera" args="0 0 0 0 0 0 map duo3d_camera 100" /-->
	<!--node pkg="tf" type="static_transform_publisher" name="map_to_pointcloudlink" args="0 0 0 0 0 0 map point_cloud_link 100" /-->
	<node pkg="tf" type="static_transform_publisher" name="map_to_pointcloudlink" args="0 0 0 0 0 0 duo3d_camera point_cloud_link 100" />

	<!-- Start the serial node for reading force sensor -->
	<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
	  <param name="port" value="/dev/ttyACM0"/>
	  <param name="baud" value="115200"/>
	</node>

	<!-- Start node that converts ticks to pounds  -->
	<node pkg="gripper" type="load_cell_ticksToPounds" name="load_cell_ticksToPounds" output="screen"/>

	<!-- Start node that records peak loads  -->
	<node pkg="data_recording" type="peak_logging2" name="peak_logging2" output="screen"/>


</launch>
