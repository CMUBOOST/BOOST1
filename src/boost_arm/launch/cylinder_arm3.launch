<?xml version="1.0"?>
<launch>
    
	<!-- Launch DUO -->
    <node pkg="duo3d_ros" name="duo_node" type="duo_node" required="true" output="screen">
		<!-- Supported Device Names: [Mini, Mini-lx] -->
		<param name="device_name" 		value="Mini-lx" />
		<param name="device_serial_number" 	value="N-A" />

    	<param name="frame_id"   value="duo3d_camera" />
		<!-- 	Choose anywhere from 0.1-3000 Frames Per Second (FPS) for the DUO to publish at. Please only
		use up to one decimal place ONLY, if you need to. This does not require a specific rate, like 
		the duo_dense3d.launch file requires. 

		 56 FPS @ 752x480 ->  49
		 62 FPS @ 640x480
		123 FPS @ 640x240
		240 FPS @ 640x120
		 93 FPS @ 320x480
		184 FPS @ 320x240 -> 171
		360 FPS @ 320x120

		-->	
		<param name="FPS"   value="35" />

		<param name="resolution_width"	value="752" />
		<param name="resolution_height"	value="480" />

		<param name="exposure"		value="15"  />
		<param name="gain"		value="1"  /> 
		<param name="LED"		value="50"  />

	    <param name="use_DUO_imu"   	value="false" />
	    <param name="use_DUO_LEDs"   	value="true" />

	    <!-- NOTE: to set the calibration manually you'll need to have the "ost.txt" file from the ros calibration. then you convert (use http://wiki.ros.org/camera_calibration_parsers) it to two separate files and put it into the calibration folder -->

	    <param name="camera_info_left" value="file://$(find duo3d_ros)/calibration/duo3d_left.yaml" />
	    <param name="camera_info_right" value="file://$(find duo3d_ros)/calibration/duo3d_right.yaml" />
    </node>


    <!-- Start joy node -->
    <arg name="joy_dev" default="/dev/input/js1" />

	<node pkg="joy" name="joy_node" type="joy_node">

	</node>

	<!-- Launch stereo_image_proc to rectify image -->
	<node ns="duo3d_camera" pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" output="screen"/>


	<!-- Launch cylinder segmentation -->
	<node pkg="cylinder_segmentation" name="cylinder_tracking7" type="cylinder_tracking7" output="screen"/>


	<!-- Launch hebi teleop node -->
  	<node pkg="hebi" name="kdc_arm_node" type="kdc_arm_node">
  		<param name="publish_frequency" value="50" />
  	</node>

 	 <!-- urdf xml robot description loaded on the Parameter Server-->
 	 <param name="robot_description" textfile="$(find boost_urdf)/robots/boost_stalker.urdf" />
 
	  <!-- robot visualization -->
<!-- 	<node name="rviz" pkg="rviz" type="rviz" required="true" /> -->
	 
	  <!-- publish all the frames to TF -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" value="50"/> <!-- Hz -->
	</node>

	<!-- publish DUO3D TF to rest of robot -->
	<node pkg="tf" type="static_transform_publisher" name="duotf_static_broadcaster" args="0.29 0.015 0 -1.57 -1.57 -1.57 arm_pan2_link duo3d_camera 15" />

	<!-- publish base_link rotated pi radians about the z axis for Merritt's lazy ass -->
<!-- 	<node pkg="tf" type="static_transform_publisher" name="base_link_rotated_tf_static_broadcaster" args="0 0 0 3.14 0 0 base_link_x_flipped base_link 33" /> -->
	<node pkg="tf" type="static_transform_publisher" name="another_rotated_tf_static_broadcaster" args="-0.1695 0 0.44835 3.14 0 0 base_link topPlate_pan1_link 15" />

	<!-- publish TF between DUO3D and the board1 tf produced by ar_sys -->
	<node pkg="kdc_arm_tf2" type="cylinder_to_tf2" name="cylinder_to_tf2" /> 

	<!-- publish camera and board points relative to base_link -->
	<node pkg="kdc_arm_tf2" type="cylinder_pose_publisher" name="cylinder_pose_publisher" output="screen"/>

	<!-- start up the executive -->
	<node pkg="arm_executive" type="arm_executive_node4" name="arm_executive_node4" output="screen"/>

	<!-- start up the service node to configure the arm -->
	<node pkg="hebi" type="arm_config_service_node" name="arm_config_service_node" output="screen"/>

	<node name="cylinder_servo_node3" pkg="hebi" type="cylinder_servo_node3" output="screen">
		<param name="cameraTopic" type="string" value="/kdc/camera_point" />
		<param name="boardTopic" type="string" value="/kdc/board_point" />
		<param name="jointTopic" type="string" value="/joint_states" />
	</node >

	<!--  Insert gripper_node5 call  -->
	<node pkg="gripper" type="gripper_node5" name="gripper_node5" output="screen"/>

	<!-- start up the service node to reverse the arm -->
	<node pkg="hebi" type="cylinder_reverse_node3" name="cylinder_reverse_node3" output="screen"/>

	<!-- publish TFs for RVIZ -->
	<!--node pkg="tf" type="static_transform_publisher" name="map_to_duocamera" args="0 0 0 0 0 0 map duo3d_camera 100" /-->
	<!--node pkg="tf" type="static_transform_publisher" name="map_to_pointcloudlink" args="0 0 0 0 0 0 map point_cloud_link 100" /-->
	<node pkg="tf" type="static_transform_publisher" name="map_to_pointcloudlink" args="0 0 0 0 0 0 duo3d_camera point_cloud_link 100" />

</launch>
